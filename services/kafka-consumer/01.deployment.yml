apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka-consumer
    app.kubernetes.io/component: kafka-consumer
    app.kubernetes.io/instance: kafka-consumer
    app.kubernetes.io/part-of: kafka-app
  name: kafka-consumer
  namespace: keda-demo
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/part-of: kafka-app
      deployment: kafka-consumer
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/part-of: kafka-app
        deployment: kafka-consumer
    spec:
      containers:
      - env:
        - name: CONSUMER_GROUP
          value: kafka-consumer-test
        - name: KAFKA_BOOTSTRAP_SERVER
          value: kafka-cluster-kafka-bootstrap.keda-demo.svc:9092
        - name: MESSAGE_PROCESSING_MILLIS
          value: "200"
        - name: TOPIC
          value: test
        image: $KAFKA_CONSUMER_IMAGE_TAG
        imagePullPolicy: IfNotPresent
        name: kafka-consumer
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
